/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    events: Event;
    'student-activities': StudentActivity;
    'lecturer-activities': LecturerActivity;
    'alumni-activities': AlumniActivity;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    'student-activities': StudentActivitiesSelect<false> | StudentActivitiesSelect<true>;
    'lecturer-activities': LecturerActivitiesSelect<false> | LecturerActivitiesSelect<true>;
    'alumni-activities': AlumniActivitiesSelect<false> | AlumniActivitiesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name: string;
  role: 'admin' | 'editor';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Event description and details
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Event poster/featured image
   */
  image: number | Media;
  /**
   * Event date
   */
  eventDate: string;
  /**
   * Event time (e.g., "14:00 - 15:30 PM JKT")
   */
  eventTime?: string | null;
  /**
   * Event location
   */
  location?: string | null;
  /**
   * Type of event
   */
  eventType?: ('brownbag' | 'workshop' | 'seminar' | 'conference' | 'lecture' | 'other') | null;
  /**
   * Event speaker/presenter
   */
  speaker?: string | null;
  /**
   * Speaker biography
   */
  speakerBio?: string | null;
  /**
   * Mark as upcoming event
   */
  isUpcoming?: boolean | null;
  /**
   * Feature this event on homepage
   */
  isFeatured?: boolean | null;
  /**
   * Make event visible to public
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "student-activities".
 */
export interface StudentActivity {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Activity description and details
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Activity featured image
   */
  image: number | Media;
  /**
   * Student name(s) involved
   */
  student: string;
  /**
   * Student academic level
   */
  studentYear?: ('1st-year' | '2nd-year' | '3rd-year' | '4th-year' | 'graduate' | 'phd') | null;
  /**
   * Student program
   */
  program?: ('ma-political-science' | 'phd-political-science' | 'mpp' | 'other') | null;
  /**
   * Activity date
   */
  activityDate: string;
  /**
   * Type of activity
   */
  category?:
    | (
        | 'academic'
        | 'research'
        | 'conference'
        | 'community'
        | 'leadership'
        | 'awards'
        | 'internship'
        | 'publication'
        | 'other'
      )
    | null;
  /**
   * Specific achievement or outcome
   */
  achievement?: string | null;
  /**
   * Faculty mentor or supervisor (if applicable)
   */
  mentor?: string | null;
  /**
   * Feature this activity on homepage
   */
  isFeatured?: boolean | null;
  /**
   * Make activity visible to public
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lecturer-activities".
 */
export interface LecturerActivity {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Activity description and details
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Activity featured image
   */
  image: number | Media;
  /**
   * Lecturer name
   */
  lecturer: string;
  /**
   * Academic title (Dr., Prof., etc.)
   */
  lecturerTitle?: string | null;
  /**
   * Department or specialization
   */
  department?: string | null;
  /**
   * Activity date
   */
  activityDate: string;
  /**
   * Type of activity
   */
  category?:
    | (
        | 'research'
        | 'conference'
        | 'awards'
        | 'funding'
        | 'media'
        | 'policy'
        | 'collaboration'
        | 'community'
        | 'editorial'
        | 'teaching'
        | 'other'
      )
    | null;
  /**
   * Institution or organization involved
   */
  institution?: string | null;
  /**
   * Specific achievement or outcome
   */
  achievement?: string | null;
  /**
   * Collaborators or co-authors
   */
  collaborators?: string | null;
  /**
   * Feature this activity on homepage
   */
  isFeatured?: boolean | null;
  /**
   * Make activity visible to public
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alumni-activities".
 */
export interface AlumniActivity {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Activity description and details
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Activity featured image
   */
  image: number | Media;
  /**
   * Alumni name
   */
  alumniName: string;
  /**
   * Year of graduation from UIII
   */
  graduationYear?: number | null;
  /**
   * Program graduated from
   */
  program?: ('ma-political-science' | 'phd-political-science' | 'mpp' | 'other') | null;
  /**
   * Current job title or position
   */
  currentPosition?: string | null;
  /**
   * Current workplace or organization
   */
  currentOrganization?: string | null;
  /**
   * Activity date
   */
  activityDate: string;
  /**
   * Type of activity
   */
  category?:
    | (
        | 'career'
        | 'research'
        | 'entrepreneurship'
        | 'policy'
        | 'international'
        | 'community'
        | 'awards'
        | 'media'
        | 'collaboration'
        | 'mentorship'
        | 'other'
      )
    | null;
  /**
   * Specific achievement or accomplishment
   */
  achievement?: string | null;
  /**
   * Impact or significance of the achievement
   */
  impact?: string | null;
  /**
   * Inspirational quote from the alumni
   */
  quote?: string | null;
  /**
   * Feature this activity on homepage
   */
  isFeatured?: boolean | null;
  /**
   * Make activity visible to public
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'student-activities';
        value: number | StudentActivity;
      } | null)
    | ({
        relationTo: 'lecturer-activities';
        value: number | LecturerActivity;
      } | null)
    | ({
        relationTo: 'alumni-activities';
        value: number | AlumniActivity;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        hero?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  image?: T;
  eventDate?: T;
  eventTime?: T;
  location?: T;
  registerLink?: T;
  eventType?: T;
  speaker?: T;
  speakerBio?: T;
  isUpcoming?: T;
  isFeatured?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "student-activities_select".
 */
export interface StudentActivitiesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  image?: T;
  student?: T;
  studentYear?: T;
  program?: T;
  activityDate?: T;
  category?: T;
  achievement?: T;
  mentor?: T;
  externalUrl?: T;
  isFeatured?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lecturer-activities_select".
 */
export interface LecturerActivitiesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  image?: T;
  lecturer?: T;
  lecturerTitle?: T;
  department?: T;
  activityDate?: T;
  category?: T;
  institution?: T;
  achievement?: T;
  collaborators?: T;
  publicationUrl?: T;
  mediaUrl?: T;
  isFeatured?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alumni-activities_select".
 */
export interface AlumniActivitiesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  image?: T;
  alumniName?: T;
  graduationYear?: T;
  program?: T;
  currentPosition?: T;
  currentOrganization?: T;
  activityDate?: T;
  category?: T;
  achievement?: T;
  impact?: T;
  linkedinUrl?: T;
  externalUrl?: T;
  quote?: T;
  isFeatured?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}